// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: stat.sql

package db

import (
	"context"
)

const getChrysalisStats = `-- name: GetChrysalisStats :one
SELECT
  COUNT(users) AS count_users,
  COUNT(forms) AS num_forms,
  COUNT(tasks) AS num_tasks
FROM
  users,
  forms,
  tasks
`

type GetChrysalisStatsRow struct {
	CountUsers int64 `json:"count_users"`
	NumForms   int64 `json:"num_forms"`
	NumTasks   int64 `json:"num_tasks"`
}

func (q *Queries) GetChrysalisStats(ctx context.Context) (*GetChrysalisStatsRow, error) {
	row := q.db.QueryRow(ctx, getChrysalisStats)
	var i GetChrysalisStatsRow
	err := row.Scan(&i.CountUsers, &i.NumForms, &i.NumTasks)
	return &i, err
}
