{{define "title"}}{{.service.Name}} Dashboard{{end}}
{{define "scripts"}}
  <style>
    #tabarea button {
      background-color: var(--color-bg);
      color: var(--color-link);
      text-transform: capitalize;
    }

    #tabarea button[aria-selected="true"] {
      background-color: var(--color-link);
      color: var(--color-bg);
    }
  </style>
  <script>
  function refreshCurrentTab() {
    htmx.trigger(document.querySelector("#tabarea [aria-selected=true]"), "refresh")
  }
  {{with .session}}
    {{if eq .Username $.params.username}}
      let prevSort = null
      async function updateStatus(task, status) {
        await fetch(`/app/{{$.params.username}}/services/{{$.params.servicename}}/tasks/${task}?status=${status}`, {
          method: "PUT",
        });
        refreshCurrentTab()
      }

      document.addEventListener('DOMContentLoaded', () => {
        document.getElementById('tabarea').addEventListener('htmx:afterOnLoad', (ev) => {
          status = document.querySelector('#tabarea [aria-selected=true]').dataset.tab
          if prevSort != null {
            prevSort.destroy()
          }
          prevSort = Sortable.create(document.getElementById('tasktable'), {
            animation: 150,
            onEnd: async (ev) => {
              console.log(ev);
              params = new URLSearchParams({
                status: status,
                src: ev.oldIndex,
                dest: ev.newIndex,
              })
              await fetch(`/api/users/{{$.params.username}}/services/{{$.params.servicename}}/move?${params}`, {
                method: "POST",
              });
              refreshCurrentTab();
            },
          });
        })
      })
    {{end}}
  {{end}}
  </script>
{{end}}
{{define "header"}}
  <h1>{{.service.Name}} Dashboard</h1>
  {{template "navbar" .}}
{{end}}
{{define "content"}}
  <div style="display: flex">
    {{with .session}}
      {{if eq .Username $.params.username}}
      <a href="/app/{{$.params.username}}/services/{{$.params.servicename}}/edit">Edit Service</a> 
      {{end}}
    {{end}}
    <a href="/app/{{.params.username}}/services/{{.params.servicename}}/form">Create Task</a>
  </div>
  <h2>Tasks</h2>
  <hr>
  <section
    style="flex-direction: column"
    id="tabarea"
    hx-get="/app/{{.params.username}}/services/{{.params.servicename}}/dashboard/tabs/pending"
    hx-trigger="load"
    hx-target="#tabarea"
    hx-swap="innerHTML"
  >
  </section>
{{end}}
{{template "skeleton" .}}
